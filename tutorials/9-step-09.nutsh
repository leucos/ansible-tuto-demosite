lesson_name("Extending to several hosts")
make_and_go_ws
clear_ws
run(`cp /tutorials/files/step-9/hosts hosts`)
run(`cp -r /tutorials/files/step-9/files files`)
run(`cp /tutorials/files/step-9/apache.yml apache.yml`)

"`Adding another Webserver`"

"We have one web server. Now we want two."

"`Updating the inventory`"

"Since we have big expectations, we'll add another web server and a load balancer we'll configure in the next lesson. But let's complete the inventory now."

"Inspect the inventory file that we prepared for this lesson by running the following command:"

"*cat hosts*"

prompt {
    if success && command == "cat hosts" {
        expect ("cat hosts")
        ""
        break
    }
} 

"`Building another web server`"

"We didn't do all this work for nothing. Deploying another web server is dead simple"

"All we had to do was remove `-l host1.example.org` from our command line. Remember `-l` is a switch that limits the playbook run on specific hosts. Now that we don't limit anymore, it will run on all hosts where the playbook is intended to run on (i.e. `web`)."

"If we had other servers in group web but wanted to limit the playbook to a subset, we could have used, for instance: `-l firsthost:secondhost:....`"

"Run the following command to execute our playbook:"

"*ansible-playbook -i hosts apache.yml*"

prompt {
    if success && command == "ansible-playbook -i hosts apache.yml" {
        expect ("ansible-playbook -i hosts apache.yml")
        "" 
        break
    }
} 

"Now that we have this nice farm of web servers. Let's turn it into a cluster by putting a load balancer in front of them in the next lesson."

"This is the end of this lesson!"

"Please press the \"`Enter`\" key to continue!"
prompt {
    if command == "" {
        expect (" ")
        break
    }
}